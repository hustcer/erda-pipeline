# Erda Pipeline Action
#   @author: hustcer
#   @created: 2023/10/29 18:50:20
# REF:
#   - https://docs.github.com/cn/actions/creating-actions/about-custom-actions
#   - https://docs.github.com/cn/actions/creating-actions/metadata-syntax-for-github-actions
#   - https://docs.github.com/en/actions/creating-actions/creating-a-composite-action

name: 'Erda Pipeline'
author: 'hustcer'
description: 'A github action to run, query or stop Erda Pipelines'

branding:
  icon: 'activity'
  color: 'purple'

inputs:
  action:
    required: true
    default: 'run'
    description: 'The action to do with the Erda Pipelines, could be `run`, `query` or `cancel`.'
  pid:
    required: true
    description: 'Erda project id of the pipeline to handle.'
  app-id:
    required: true
    description: 'Erda app id of the pipeline to handle.'
  app-name:
    required: true
    description: 'Erda app name of the pipeline to handle.'
  branch:
    required: true
    description: 'The Erda branch name of the pipeline to handle.'
  environment:
    required: true
    description: 'The Erda environment of the pipeline to handle, should be `DEV`, `TEST`, `STAGING` or `PROD`.'
  pipeline:
    required: true
    default: 'pipeline.yml'
    description: 'The Erda pipeline file to handle.'

runs:
  using: 'composite'
  steps:
    - name: Setup Nu
      uses: hustcer/setup-nu@v3
      with:
        version: 0.100.0

    - name: Setup Erda
      shell: nu {0}
      run: |
        use ${{ github.action_path }}/nu/pipeline.nu *

        version | print
        let auth = (get-auth)
        let action = '${{ inputs.action }}'
        let pid = ${{ inputs.pid }}
        let appId = ${{ inputs.app-id }}
        let branch = '${{ inputs.branch }}'
        let appName = '${{ inputs.app-name }}'
        let pipeline = '${{ inputs.pipeline }}'
        let environment = '${{ inputs.environment }}'
        let erdaConfig = {
          pid: $pid,
          appId: $appId,
          branch: $branch,
          appName: $appName,
          pipeline: $pipeline,
          environment: $environment
        }
        match $action {
          'query' => 'Querying Erda pipeline with the following config...',
          'cancel' => 'Cancelling Erda pipeline with the following config...',
          'run' => 'Preparing running Erda pipeline with the following config...',
          _ => $'Unsupported action: ($action)'
        } | print
        $erdaConfig | print
        match $action {
          'run' => { erda-deploy $erdaConfig --auth $auth --watch },
          'query' => { erda-query $erdaConfig --auth $auth --watch },
          _ => { print $'Unsupported action: ($action)' },
        }

